name: extension-docker
version: 0.4.@
logo: logo.png
description: "This release is made to be extended and can be used to build and push  Docker images
  based on the Dockerfile of the parent project. \n"

depends:
- stdlib-latest

includes:
- LICENSE
- README.md

inputs:
- id: docker_image
  description: |
    The name of the Docker image to build. Don't specify the repository  (see
    'Docker Repository') or version here (see 'Docker Image Version')
  friendly: Docker Image
  type: string

- id: docker_image_version
  default: $__concat("v", $this.version)
  description: |
    The version with which to tag the Docker image.
  friendly: Docker Image Version
  type: string

- id: docker_file
  default: Dockerfile
  description: |
    The path of the Dockerfile to use.
  friendly: Docker File
  type: string

- id: docker_repository
  default: ""
  description: |
    If set the image will be tagged with this repository and pushed on every
    successful build.
  friendly: Docker Repository
  type: string

- id: docker_cmd
  default:
  - docker
  description: |
    The Docker command to use (['docker'] by default). On GCP a value of
    ['gcloud', 'docker', '--'] is recommended.
  friendly: Docker Command
  type: list[string]

- id: docker_username
  default: ""
  description: The Docker username to use for login. Leave blank to skip.
  friendly: Docker Username

- id: docker_password
  default: ""
  description: The Docker password to use for login. Only used when `docker_username`
    is not blank.
  friendly: Docker Password

- id: docker_email
  default: ""
  description: The Docker email to use for login. Leave blank to skip. Only used when
    `docker_username` is not blank.
  friendly: Docker Email

- id: docker_server
  default: ""
  description: |
    The Docker server to login to. Only used docker_username is not blank. Example: https://eu.gcr.io
  friendly: Docker Server

- id: docker_import_image
  default: false
  type: bool
  description: |
    Instead of building a Dockerfile assume the image already exists in the provided 
    docker_repository.

outputs:
- id: image
  description: "The Docker image that this release produces. If docker_repository
    is set the  value will be included. \n"
  friendly: Docker Image
  type: string

build: build_and_push_image.py
deploy: build_and_push_image.py
destroy: destroy.py
